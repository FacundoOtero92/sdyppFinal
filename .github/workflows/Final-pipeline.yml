name: Terraform and Kubernetes Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies (Coordinador)
      run: |
        python -m pip install --upgrade pip
        pip install -r TPFinal/blockchain/Coordinador/requirements.txt

     # Verificar archivos en la carpeta Minero
    - name: List files in Minero
      run: |
       ls TPFinal/blockchain/Minero

   # Instalar dependencias en la carpeta Minero
    - name: Install dependencies (Minero)
      run: |
       python -m pip install --upgrade pip
       pip install -r TPFinal/blockchain/Minero/requirements.txt

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Authenticate with Google Cloud (Coordinador)
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_COORDINADOR }}
      run: |
        echo '${{ secrets.GOOGLE_CREDENTIALS_COORDINADOR }}' > credentials.json
   

    - name: Authenticate with Google Cloud (Minero)
     
      env:
         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_MINERO }}
      run: |
        echo '${{ secrets.GOOGLE_CREDENTIALS_MINERO }}' > credentials.json
    
        



     # Setup de CLI de Terraform
    - name: Terraform setup
      uses: hashicorp/setup-terraform@v3
    
    - name: Terraform init
      working-directory: "TPFinal/Infraestructura/terraform servicios"
      env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
      run: |
          echo '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}' > credentials.json
    
          ls -lah

            BUCKET_NAME="terraform_state_cloud"
            PREFIX="cluster/state"

            terraform init --reconfigure \
              --backend-config "bucket=${BUCKET_NAME}" \
              --backend-config "prefix=${PREFIX}"

            terraform validate

            terraform plan -lock=false

            terraform apply -lock=false --auto-approve
    
      # - name: Initialize Terraform
      # working-directory: "TPFinal/Infraestructura/terraform servicios"
      # run: terraform init
      
    # - name: Plan Terraform changes
    #   working-directory: "TPFinal/Infraestructura/terraform servicios"
    #   run: terraform plan

    # - name: Apply Terraform changes
    #   if: github.ref == 'refs/heads/main'
    #   working-directory: "TPFinal/Infraestructura/terraform servicios"
    #   run: terraform apply -auto-approve

    - name: Build Docker Images (Coordinador)
      run: |
        docker build -f TPFinal/blockchain/Coordinador/dockerfile.dockerfile -t coordinador-app .

    - name: Build Docker Images (Minero)
      run: |
        docker build -f TPFinal/blockchain/minero/worker_cpu.dockerfile -t worker-cpu-app .
        docker build -f TPFinal/blockchain/minero/worker_gpu.dockerfile -t worker-gpu-
